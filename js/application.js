// Generated by CoffeeScript 1.3.3
(function() {
  var Conversation, Duck, HtmlFormatter, HtmlUI, Processor;

  Duck = (function() {

    function Duck(ui_class) {
      this.ui = new ui_class();
      this.processor = new Processor();
    }

    Duck.prototype.ask = function(question) {
      return this.processor.getAnswer(question);
    };

    return Duck;

  })();

  $(function() {
    return new Duck(HtmlUI);
  });

  Conversation = (function() {

    function Conversation() {
      this.conversation = [];
    }

    Conversation.prototype.add = function(question, answer) {
      return this.conversation.push([question, answer]);
    };

    return Conversation;

  })();

  HtmlUI = (function() {

    function HtmlUI(duck) {
      this.duck = duck;
      this.bind();
    }

    HtmlUI.prototype.bind = function() {
      var _this = this;
      return $('#duck form').on("submit", function() {
        var answer, question;
        question = _this.getQuestion();
        answer = _this.duck.ask(question);
        return _this.updateConversation();
      });
    };

    HtmlUI.prototype.getQuestion = function() {
      return $('#duck input[type=text]').val();
    };

    HtmlUI.prototype.updateConversation = function() {
      return $('#quack').html(this.duck.conversation.applyFormatter(HtmlFormatter));
    };

    return HtmlUI;

  })();

  HtmlFormatter = (function() {

    function HtmlFormatter() {}

    HtmlFormatter.latest = function(txt) {
      return "<div class='latest'>" + txt + "</div>";
    };

    HtmlFormatter.question = function(txt) {
      return "<div class='question'><label>Q:</label> " + txt + "</div>";
    };

    HtmlFormatter.answer = function(txt) {
      return "<div class='question'><label>A:</label> " + txt + "</div>";
    };

    HtmlFormatter.keyword = function(txt) {
      return "<strong>" + txt + "</strong>";
    };

    return HtmlFormatter;

  })();

  Processor = (function() {

    function Processor() {}

    Processor.prototype.getAnswer = function(question) {
      return "I'm sorry, Dave, I just don't know.";
    };

    return Processor;

  })();

}).call(this);
